{
  "hash": "942b4f9e8d97f384c516de882fc66a94",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geospatial Analysis for Public Good: A Data-driven Perspective on Road Traffic Accidents in the Bangkok Metropolitan Region\"\nauthor: \"Federico Jose Rodriguez\"\ndate: \"Sep 8 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n\n(Summary here. WIP)\n\n# A. Getting Started\n\n## A.1 Background\n\nRoad traffic accidents account for 1.19million deaths and up to 50 million non-fatal injuries according to a [report by the WHO](https://www.who.int/news-room/fact-sheets/detail/road-traffic-injuries) last year.\n\nThe same report identifies major risk groups: low- and middle-income countries, (esp in Africa and Europe) the working population, and males. It also identifies some key risk factors which include human error, speeding, driving under the influence of alcohol, distracted driving, unsafe road infrastructure, unsafe vehicles, and law enforcement. Most of the factors identified are behavioral in nature but do not discount that other factors may also contribute to a higher risk of occurrence.\n\nWithin Southeast Asia, Thailand has ranked the highest in terms of incidence of road traffic accidents with an average number of of 20,000 deaths a year or 56 a day. The country has also seen an increase in the number of accidents from 2014 to 2021. A large 19% of these accidents occurred in national highways, and the chances of encountering an accident-prone zone was found to be 66%.\n\n## A.2 Objectives\n\nThis study aims to take a deeper look into the road accidents in Thailand, focusing on the [Bangkok Metropolitan Region (BMR)](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region) which contains the capital Bangkok, and five neighboring provinces. (Nonthaburi, Nakhon Pathom, Pathum Thani, Samut Prakan, Samut Sakhon)\n\nAs most literature has focused on behavioral and environmental factors, the study will focus on identifying spatiotemporal factors influencing the occurrence of road accidents in BMR. At the minimum, the study deliverables include the following:\n\n-   Visualization of spatiotemporal dynamics of road traffic accidents in BMR\n\n-   Detailed spatial analysis of road traffic accidents in BMR\n\n-   Detailed spatiotemporal analysis of road traffic accidents in BMR\n\nThe appropriate technique must be used for these deliverables and all the analysis and visualizations will be carried out using R.\n\n## A.3 Data Sources\n\nThe study makes use of the following datasets which are publicly available online.\n\n| Dataset Short Name | Description                                               | Datasource                                                                              |\n|------------------|----------------------|--------------------------------|\n| THRA               | Thailand road accident data from 2019 to 2022             | [Kaggle](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) |\n| THOSM              | Thailand roads open street map in shapefile format        | [HDX](https://data.humdata.org/dataset/hotosm_tha_roads)                                |\n| THSAB              | Thailand - Subnational Administrative Boudaries shapefile | [HDX](https://data.humdata.org/dataset/cod-ab-tha?)                                     |\n|                    |                                                           |                                                                                         |\n\n## A.4 Importing and Launching R Packages\n\nFor this study, four R packages will be used. A description of the packages and the code, using `p_load()` of the **pacman** package, to import them is given below.\n\n::: panel-tabset\n#### Package Description\n\nThe loaded packages include:\n\n-   **sf -** package for importing, managing and processing vector-based geospatial data\n\n-   **tidyverse -** collection of packages for performing data importation, wrangling and visualization\n\n-   **tmap -** package with functions for plotting cartographic quality maps\n\n-   **sPNetwork** - provides functions for performing SPPA methods like KDE and K-function on a network. The package can also be used to build spatial matrices to conduct traditional spatial analyses with spatial weights based on reticular distances\n\n#### Import Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n```\n:::\n\n\n:::\n\nAs we will be performing simulations in the analysis later, it is good practice to define a random seed to be used so that results are consistent for viewers of this report, and the results can be reproduced.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\n\n# B. Data Loading and Preparation\n\nIn this section, the appropriate R packages will be used to load the three datasets into R objects, and to inspect and transform them as needed.\n\n## B.1 Thailand Subnational Administrative Boundary, Shapefile\n\nWe load the Thailand subnational administrative boundary shapefile into an R dataframe using `st_read()` from the sf package. The source provides the geospatial data in varying levels as indicated by their suffix: country (0), province (1), district (2), and sub-district. (3) For focusing on the BMR, which covers Bangkok and neighboring provinces, province is the most likely level of detail we will need so we will use the code chunk below to load the appropriate layer first.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthsab_prov <- st_read(dsn=\"data/geospatial\", \n                   layer=\"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\drkrodriguez\\ISSS626-GAA\\Take-home\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\nWe examine the loaded data to confirm the load has been done properly and to get some initial observations of the data.\n\n::: panel-tabset\n#### Calling Object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthsab_prov\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3    1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4    1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n7    5.693342 0.54578838                 Lop Buri          ลพบุรี       TH16\n8    1.778326 0.06872655                Sing Buri         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 Chai Nat         ชัยนาท       TH18\n10   4.766446 0.29208711                 Saraburi         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn    validTo                       geometry\n1          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.6139 13...\n2          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.7306 13...\n3          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3415 14...\n4          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.8916 14...\n5          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.5131 14...\n6          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3332 14...\n7          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((101.3453 15...\n8          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.3691 15...\n9          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((100.1199 15...\n10         TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((101.3994 15...\n```\n\n\n:::\n:::\n\n\n\n#### Checking crs information with st_crs()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thsab_prov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n:::\n\nThe output confirms that we have a multipolygon sf object with 77 rows and 17 columns. There is a column named `ADM1_EN` which appears to contain the province names needed to define the BMR boundaries. It also shows that the dataset is using a coordinate reference system rather than a projected reference system.\n\nFirst, we reload the data to use a projected reference system and apply the correct reference system with EPSG code of 32647 using `st_transform()`. This transformation can be confirmed with `st_crs()` The **tmap** package is then used to visualize the object to see if it properly depicts the boundaries of Thailand and its provinces.\n\n::: panel-tabset\n#### Load Object and Transform CRS information\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthsab_prov <- st_read(dsn=\"data/geospatial\",\n                          layer=\"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\drkrodriguez\\ISSS626-GAA\\Take-home\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n#### Checking crs information with st_crs()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thsab_prov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\n\n#### Plot of thsab_prov using tmap\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(thsab_prov) +\n  tm_polygons(\"grey\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## B.2 Filtering THSAB for the Bangkok Metropolitan Region\n\nBefore further analyzing the data, we will limit the scope to only consider the Bangkok Metropolitan Region or BMR. This would encompass Bangkok, Nonthaburi, Nakhon Pathom, Pathum Thani, Samut Prakan, Samut Sakhon. While it is good to get insights outside of BMR, it is out of the study scope and it is best to focus on the objectives.\n\nThe code chunk below checks if all the provinces in the BMR appear as is under the `ADM1_EN` column of `thsab_prov`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(thsab_prov, ADM1_EN %in% c(\"Bangkok\", \"Nonthaburi\",\"Nakhon Pathom\", \"Pathum Thani\", \"Samut Prakan\", \"Samut Sakhon\"))$ADM1_EN\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Bangkok\"       \"Samut Prakan\"  \"Nonthaburi\"    \"Pathum Thani\" \n[5] \"Nakhon Pathom\" \"Samut Sakhon\" \n```\n\n\n:::\n:::\n\n\n\nWith the previous code returning all 6 provinces, we have confirmation that the provinces are all present and spelled as is in the data source. We create a new object `bmr_boundary` to contain only the provinces in BMR. We also take this opportunity to only keep the relevant columns in the dataset using the **select()** function of dplyr package.\n\n::: panel-tabset\n#### Create BMR boundary object using filter()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_boundary <- st_read(dsn=\"data/geospatial\",\n                      layer=\"tha_admbnda_adm1_rtsd_20220121\") %>%\n  st_transform(crs = 32647) %>%\n  filter(ADM1_EN %in% c(\"Bangkok\", \"Nonthaburi\",\"Nakhon Pathom\", \"Pathum Thani\", \"Samut Prakan\", \"Samut Sakhon\")) %>% dplyr::select(Shape_Leng, Shape_Area, ADM1_EN, geometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\drkrodriguez\\ISSS626-GAA\\Take-home\\Take-home_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n#### Plot of bmr_boundary using tmap\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(bmr_boundary) +\n  tm_polygons(\"grey\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n:::\n\nThe code below creates a second object which is just a union of all the provinces. (i.e., borders between provinces are lost) This is done using the `st_union()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_full = st_union(bmr_boundary)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(bmr_full) +\n  tm_polygons(\"grey\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\nThe code below keeps the final boundary objects into files to make loading more convenient for later analyses.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bmr_boundary, \"data/rds/bmr_boundary.rds\")\nwrite_rds(bmr_full, \"data/rds/bmr_full.rds\")\n```\n:::\n\n\n\nThe code below then reloads the same objects into R:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_boundary = read_rds(\"data/rds/bmr_boundary.rds\")\nbmr_full = read_rds(\"data/rds/bmr_full.rds\")\n```\n:::\n\n\n\n## B.3 Road Accident Data, Aspatial, csv-file\n\nThe road accident data is contained in a csv file. We use the code block in the first tab below to load it into the `thra` object with some necessary transformations that we identified upon inspecting the raw file. The second tab gives an explanation of the different nested functions used in the code\n\nCode to import and transform road accident data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmracc <- read_csv(\"data/aspatial/thai_road_accident_2019_2022.csv\")  %>%\n  filter(!is.na(longitude) & longitude != \"\",\n         !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\n    \"longitude\", \"latitude\"),\n    crs=4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(Year = year(incident_datetime)) %>%\n  mutate(MonthNum = month(incident_datetime)) %>%\n  mutate(Month = month(incident_datetime, label = TRUE, abbr = TRUE)) %>%\n  mutate(DayOfWeek = wday(incident_datetime, label = TRUE, abbr = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nbmracc = st_intersection(bmr_full, bmracc)\n```\n:::\n\n\n\nWe use the code chunks below to check the data and visualize the data on the BMR boundary map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmracc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 12989 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 591277.5 ymin: 1486846 xmax: 710166.1 ymax: 1576520\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 5 geometries:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (627012.3 1533381)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (655411.7 1531940)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (670903.3 1503427)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (674117.8 1525144)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPOINT (641347.8 1526237)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(bmr_boundary) +\n  tm_polygons(col = \"grey\") +\n  tm_shape(bmracc) +\n  tm_dots(col = \"red\", size = 0.01, alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\nThe code chunk below writes the resulting accident dataset into an rds file for convenient loading.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bmracc, \"data/rds/bmracc.rds\")\n```\n:::\n\n\n\ntm\\_\n\n## B.4 THOSM (Thailand Roads Open StreetMap, Shapefile)\n\nThe second geospatial object is the street map shapefile. We will use the object `network` to contain the final road network for the study.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork <- st_read(dsn=\"data/geospatial\",\n                      layer=\"hotosm_tha_roads_lines_shp\")\n```\n:::\n\n\n\nRunning the above code confirms that the dataset is in multilinestring sf format and that it contains 2.8M records across 15 variables. It also shows that there is no CRS applied to the dataset.\n\nBased on these, the following steps need to be done: apply the right CRS/EPSG code of 32647 or the same as `bmr_full`, and, filter the network to only include BMR.\n\nThe code below does the first step of applying a reference system and updating the EPSG code to 32647 using `st_set_crs()` and `st_crs()` from the sf package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork <- st_read(dsn=\"data/geospatial\",\n                      layer=\"hotosm_tha_roads_lines_shp\") %>%\n  st_make_valid() %>% st_set_crs(4326) %>% st_transform(crs = st_crs(bmr_full))\n```\n:::\n\n\n\nThe code below then finds the network within BMR by using `st_intersection()` to find the overlap between the full road network and the BMR boundary.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_network <- st_intersection(network, bmr_full)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nCalling the object name allows us to inspect the contents.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_network\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 584672 features and 14 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 587921 ymin: 1484439 xmax: 712417 ymax: 1579041\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n             name               name_en        highway  surface smoothness\n1      ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       <NA>\n2  ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     <NA>       <NA>\n3            <NA>                  <NA> secondary_link     <NA>       <NA>\n4            <NA>                  <NA>        service     <NA>       <NA>\n5      ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       <NA>\n6            <NA>                  <NA>        service     <NA>       <NA>\n7     ถนนเอราวัณ 1         Erawan 1 Road       tertiary     <NA>       <NA>\n9            <NA>                  <NA>        service     <NA>       <NA>\n10           <NA>                  <NA>    residential     <NA>       <NA>\n11           <NA>                  <NA>        service     <NA>       <NA>\n   width lanes oneway bridge layer source        name_th     osm_id  osm_type\n1   <NA>  <NA>    yes   <NA>  <NA>   <NA>     ถนนฉลองกรุง 1125681229 ways_line\n2   <NA>  <NA>   <NA>   <NA>  <NA>   <NA> ซอยฉลองกรุง 1/1  594401607 ways_line\n3   <NA>  <NA>    yes   <NA>  <NA>   <NA>           <NA>  472283206 ways_line\n4   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  594401608 ways_line\n5   <NA>     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n6   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  317485095 ways_line\n7   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>    ถนนเอราวัณ 1  378672881 ways_line\n9   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  909942692 ways_line\n10  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  694824299 ways_line\n11  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  909946323 ways_line\n                         geometry\n1  LINESTRING (693686.1 151979...\n2  LINESTRING (693358 1519300,...\n3  LINESTRING (692949.1 151886...\n4  LINESTRING (693256 1519184,...\n5  LINESTRING (692810.8 151863...\n6  LINESTRING (693877.2 152042...\n7  LINESTRING (677182.3 156542...\n9  LINESTRING (629009.2 151425...\n10 LINESTRING (629703.9 151362...\n11 LINESTRING (629379.9 151353...\n```\n\n\n:::\n:::\n\n\n\nThe size of the object has now been reduced to 585K features from the original 2.8M. This still appears a very large number if we want to visualize the data, so we need to inspect if there are any opportunities to reduce the dataset by excluding any irrelevant records.\n\nThe data includes a column named highway which gives information on the the type or classification of the road.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bmr_network, aes(x = reorder(highway, table(highway)[highway]))) +\n  geom_bar() +\n  coord_flip() +\n  ggtitle(\"Number of Roads by Highway type\") +\n  theme_minimal() +\n  geom_text(stat='count', aes(label=..count..), hjust=-0.3) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(x = \"Number of Records\", y = \"Highway Type\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\nThe resulting chart shows that roads with highway type of **residential** and **service** make up 522K of the 585K roads in the dataset. We refer to the OpenStreetMap wiki page to see the definition of the [different types of highways](https://wiki.openstreetmap.org/wiki/WikiProject_Thailand#Highway_classification) in the Thailand map and see that these two highway types are access roads for residences or specific buildings. For our objective, we should be able to limit to roads where accidents (are expected to frequently) happen, and only to roads that should be accessible by vehicles. Going through the definition of the highway types, we see that the following 6 types could be out of scope for our study:\n\n-   residential - road within a residential area that gives public access to one or multiple residences\n\n-   service - minor road that gives access to buildings or places outside a residential area (e.g., to a religious site, an attraction, part of an estate)\n\n-   footway - pathways designed for pedestrian access\n\n-   track - road whose only function is to provide access to surrounding land, and is most of the time unpaved\n\n-   path - multi-purpose path intended for non-motor vehicles\n\n-   steps\n\nWe can then use the following code chunk which uses the `filter()` function to remove these classifications from the current `network` object. We call the object name in the succeeding code chunk to check the new dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_network <- bmr_network %>% \n  filter(!(highway %in% c(\"residential\", \"service\", \"footway\", \"track\", \"path\", \"steps\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_network\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 34056 features and 14 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 590124.8 ymin: 1484506 xmax: 712235 ymax: 1579041\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n           name                    name_en        highway  surface smoothness\n1    ถนนฉลองกรุง         Chalong Krung Road      secondary    paved       <NA>\n2          <NA>                       <NA> secondary_link     <NA>       <NA>\n3    ถนนฉลองกรุง         Chalong Krung Road      secondary concrete       <NA>\n4   ถนนเอราวัณ 1              Erawan 1 Road       tertiary     <NA>       <NA>\n5     ถนนลำลูกกา            Lam Luk Ka Road      secondary     <NA>       <NA>\n6     ถนนลำลูกกา            Lam Luk Ka Road      secondary     <NA>       <NA>\n7     ถนนลำลูกกา            Lam Luk Ka Road      secondary     <NA>       <NA>\n8     ถนนลำลูกกา            Lam Luk Ka Road      secondary     <NA>       <NA>\n9  ถนนบรมราชชนนี Borommaratchachonnani Road          trunk  asphalt       <NA>\n10         <NA>                       <NA>   unclassified     <NA>       <NA>\n   width lanes oneway bridge layer source      name_th     osm_id  osm_type\n1   <NA>  <NA>    yes   <NA>  <NA>   <NA>   ถนนฉลองกรุง 1125681229 ways_line\n2   <NA>  <NA>    yes   <NA>  <NA>   <NA>         <NA>  472283206 ways_line\n3   <NA>     2    yes    yes     1   Bing   ถนนฉลองกรุง  116847248 ways_line\n4   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>  ถนนเอราวัณ 1  378672881 ways_line\n5   <NA>     3    yes   <NA>  <NA>   <NA>    ถนนลำลูกกา 1312138113 ways_line\n6   <NA>     3    yes   <NA>  <NA>   <NA>    ถนนลำลูกกา 1312138112 ways_line\n7   <NA>     3    yes   <NA>  <NA>   <NA>    ถนนลำลูกกา  155900618 ways_line\n8   <NA>     3    yes   <NA>  <NA>   <NA>    ถนนลำลูกกา  156365723 ways_line\n9   <NA>     3    yes   <NA>  <NA>   <NA> ถนนบรมราชชนนี  615741634 ways_line\n10  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>         <NA>  106732198 ways_line\n                         geometry\n1  LINESTRING (693686.1 151979...\n2  LINESTRING (692949.1 151886...\n3  LINESTRING (692810.8 151863...\n4  LINESTRING (677182.3 156542...\n5  LINESTRING (676813.7 154284...\n6  LINESTRING (677134.2 154283...\n7  LINESTRING (675989.4 154300...\n8  LINESTRING (676815 1542831,...\n9  LINESTRING (632625.1 152356...\n10 LINESTRING (620655.3 152906...\n```\n\n\n:::\n:::\n\n\n\nThe new road network object is now reduced to 34K records or roads which is a 94% reduction in the number of records. We will use some visual inspection to see if this reduction in records will affect our analysis. The two code chunks below plot the road network within the boundaries, while the second plots the three objects together. We use the tmap function to create these maps.\n\n::: panel-tabset\n#### BMR filtered road network only\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(bmr_full) +\n  tm_polygons(col = \"lightgrey\") +\n  tm_shape(bmr_network) +\n  tm_lines(col = \"black\", alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n#### BMR filtered road network with road accident dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(bmr_full) +\n  tm_polygons(col = \"lightgrey\") +\n  tm_shape(bmr_network) +\n  tm_lines(col = \"darkblue\") +\n  tm_shape(bmracc) +\n  tm_dots(col = \"red\", alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n:::\n\nFrom these two maps, we see that:\n\n1.   while we have filtered 90% of the original records, the resulting map still appears dense, especially in some central areas; and,\n\n2.  the road accident locations appear to fall along the network\n\nBased on these, we will go ahead with this version of the network for our analysis.\n\nThe following code writes the resulting network into an rds file for more convenient loading in the future.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bmr_network, \"data/rds/bmr_network.rds\")\n```\n:::\n\n\n\n## B.5 Pre-analysis transformations\n\nIn this section, we perform some additional transformations to perform the required analyses. \n\nXX jitter xx\n\nxx creating seasonal mapping or other time based tagging xx",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}